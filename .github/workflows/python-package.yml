# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test SoilPulse

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#    - uses: mirromutth/mysql-action@v1.1
#      with:
#        mysql version: '8.0.39' # Optional, default value is "latest". The version of the MySQL
#        host port: 3306 # Optional, default value is 3306. The port of host
#        container port: 3306 # Optional, default value is 3306. The port of container
#        mysql database: 'soilpulse' # Optional, default value is "test". The specified database which will be create
#        mysql root password: 'root'
#        mysql user: 'soilpulse' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
#        mysql password: 'NFDI4earth'  # Required if "mysql user" exists. The password for the "mysql user"  
    - name: startandwaitforMYSQL
      run: |
        cd SP_MYSQL
        docker compose up -d --wait --wait-timeout 240
        sleep 60
        
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
